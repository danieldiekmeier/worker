"use strict";(self.webpackChunkgraphile_worker=self.webpackChunkgraphile_worker||[]).push([[4],{5318:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>g});var r=n(7378);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=o,g=u["".concat(c,".").concat(m)]||u[m]||f[m]||i;return n?r.createElement(g,a(a({ref:t},s),{},{components:n})):r.createElement(g,a({ref:t},s))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9631:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>f,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(5773),o=(n(7378),n(5318));const i={title:"Configuration",sidebar_position:43},a=void 0,l={unversionedId:"configuration",id:"configuration",title:"Configuration",description:"Graphile Worker does not require a configuration file, but you may find that",source:"@site/docs/configuration.md",sourceDirName:".",slug:"/configuration",permalink:"/docs/configuration",draft:!1,editUrl:"https://github.com/graphile/worker/tree/main/website/docs/configuration.md",tags:[],version:"current",sidebarPosition:43,frontMatter:{title:"Configuration",sidebar_position:43},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/docs/installation"},next:{title:"Task executors",permalink:"/docs/tasks"}},c={},p=[],s={toc:p},u="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Graphile Worker does not require a configuration file, but you may find that\nhaving a configuration file means you don't have to remember all the CLI flags\neach time you run it."),(0,o.kt)("p",null,"Graphile Worker is configured via a ",(0,o.kt)("inlineCode",{parentName:"p"},"graphile.config.js")," (or ",(0,o.kt)("inlineCode",{parentName:"p"},".ts"),", ",(0,o.kt)("inlineCode",{parentName:"p"},".mjs"),", ...)\nfile, e.g.:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="graphile.config.js"',title:'"graphile.config.js"'},'module.exports = {\n  worker: {\n    connectionString: process.env.DATABASE_URL,\n    maxPoolSize: 10,\n    pollInterval: 2000,\n    preparedStatements: true,\n    schema: "graphile_worker",\n    crontabFile: "crontab",\n    concurrentJobs: 1,\n    fileExtensions: [".js", ".cjs", ".mjs"],\n  },\n};\n')),(0,o.kt)("p",null,"Or, in TypeScript:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="graphile.config.ts"',title:'"graphile.config.ts"'},'import type {} from "graphile-config";\nimport type {} from "graphile-worker";\n\nconst preset: GraphileConfig.Preset = {\n  worker: {\n    connectionString: process.env.DATABASE_URL,\n    maxPoolSize: 10,\n    pollInterval: 2000,\n    preparedStatements: true,\n    schema: "graphile_worker",\n    crontabFile: "crontab",\n    concurrentJobs: 1,\n    fileExtensions: [".js", ".cjs", ".mjs"],\n  },\n};\n\nexport default preset;\n')),(0,o.kt)("p",null,"The options are documented via TypeScript, hover an option in your editor to see\nwhat it does."),(0,o.kt)("p",null,"TODO: detail the options here, in an autogenerated/maintainable way."))}f.isMDXComponent=!0}}]);